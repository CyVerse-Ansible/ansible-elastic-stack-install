---
- name: Verify Multi-Instance Directory Layout 
  hosts: localhost
  remote_user: root
  vars:
     BEAT_TYPE: metricbeat
     ES_PACKAGE: "{{BEAT_TYPE | mandatory}}"
     SYSD_FILE_TEMPLATE_SRC: "beats/systemd/beat.service.j2"
     INIT_FILE_TEMPLATE_SRC: "beats/init/{{ansible_os_family}}-init.j2"
     ES_CONFIG_CONTENTS:
        name: "{{es_instance_name}}"
     beat_user: root
     beat_group: root
     beat_doc_url: "https://www.elastic.co/products/beats" 
     beat_description: "It ships things to places"
     es_user: "{{beat_user}}"
     es_group: "{{beat_group}}"
     es_restart_on_change: false
     es_start_service: false
     instance1: "flow1"
     instance2: "flow2"
  roles:
     - role: role_under_test
       es_instance_name: "{{instance1}}"
     - role: role_under_test
       es_instance_name: "{{instance2}}"
  post_tasks:
     - stat:
         path: "{{item}}"
       with_items:
          - "/etc/{{ES_PACKAGE}}/{{instance1}}/"
          - "/etc/{{ES_PACKAGE}}/{{instance2}}/"
          - "/var/lib/{{ES_PACKAGE}}/{{instance1}}/"
          - "/var/lib/{{ES_PACKAGE}}/{{instance2}}/"
          - "/var/log/{{ES_PACKAGE}}/{{instance1}}/"
          - "/var/log/{{ES_PACKAGE}}/{{instance2}}/"
          - "/var/run/{{ES_PACKAGE}}/{{instance1}}/"
          - "/var/run/{{ES_PACKAGE}}/{{instance2}}/"
       register: verify_paths
     - when: not item.stat.exists
       fail:
          msg: "The following path should exist, but doesn't; {{item.item}}"
       with_items: "{{verify_paths.results}}"

     - when: use_system_d 
       block:
          - stat: 
              path: "{{item}}"
            with_items:
               - "/usr/lib/systemd/system/{{ES_PACKAGE}}_{{instance1}}.service"
               - "/usr/lib/systemd/system/{{ES_PACKAGE}}_{{instance2}}.service"
            register: verify_sysd_files
          - when: not item.stat.exists
            fail: 
              msg: "The following file should exist, but doesn't; {{item.item}}"
            with_items: "{{verify_sysd_files.results}}"


     - when: not use_system_d 
       block:
          - stat: 
              path: "{{item}}"
            with_items:
               - "/etc/init.d/{{ES_PACKAGE}}_{{instance1}}"
               - "/etc/init.d/{{ES_PACKAGE}}_{{instance2}}"
            register: verify_init_files
          - when: not item.stat.exists
            fail:
               msg: "The following file should exist, but doesn't; {{item.item}}"
            with_items: "{{verify_init_files.results}}"
