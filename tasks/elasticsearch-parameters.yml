#Use systemd for the following distributions:
#Ubuntu 15 and up
#Debian 8 and up
#Centos 7 and up
#Relies on elasticsearch distribution installing a serviced script to determine whether one should be copied.

- set_fact: use_system_d={{(ansible_distribution == 'Debian' and ansible_distribution_version | version_compare('8', '>=')) or (ansible_distribution == 'CentOS' and ansible_distribution_version | version_compare('7', '>=')) or (ansible_distribution == 'Ubuntu' and ansible_distribution_version | version_compare('15', '>=')) }}

- set_fact: _force_install=no
- when: es_allow_downgrades
  set_fact: _force_install=yes

- when: (ansible_distribution == "CentOS" and
         ansible_distribution_major_version | version_compare('6', '<')) or
        (ansible_distribution == "Ubuntu" and 
         ansible_distribution_major_version | version_compare('12', '<'))
  block:
    - debug: var=ansible_distribution
    - debug: var=ansible_distribution_major_version 
    - fail: msg="This role only supported on Ubuntu 12.04 or CentOS 6 and above"

# Check for mandatory parameters
- when: ES_PACKAGE is undefined or
        ES_PACKAGE not in es_supported_packages
  block:
    - when: ES_PACKAGE is undefined
      fail: 
        msg: "ES_PACKAGE must be specified. Supported values; {{supported_packages}}"
    - when: ES_PACKAGE is not in es_supported_packages
      fail: 
        msg: "ES_PACKAGE not supported: '{{ES_PACKAGE}}' Supported values; {{supported_packages}}"

- when: es_instance_name is defined
  block:
    - when: es_instance_name == ''
      fail: msg="es_instance_name cannot be blank"
    
    - when: ES_CONFIG_CONTENTS is undefined
      fail: msg="When specifying es_instance_name, the ES_CONFIG_CONTENTS must be supplied"

    - when: INIT_FILE_TEMPLATE_SRC is undefined and 
            not use_system_d
      fail: msg="If specifying es_instance_name, then INIT_FILE_TEMPLATE_SRC must be defined"
    
    - when: SYSD_FILE_TEMPLATE_SRC is undefined and 
            use_system_d
      fail: msg="If specifying es_instance_name, then SYSD_FILE_TEMPLATE_SRC must be defined"

    - set_fact: 
        instance_default_file: "{{default_file | dirname}}/{{instance_sys_file_name}}"
        instance_init_script: "{{init_script | dirname }}/{{instance_sys_file_name}}"
    - set_fact: 
        instance_sysd_script: "{{sysd_script | dirname }}/{{instance_sys_file_name}}.service"
      when: use_system_d

- when: es_instance_name is undefined
  block:
    - set_fact: 
        instance_default_file: "{{default_file}}"
        instance_init_script: "{{init_script}}"
    - set_fact: 
        instance_sysd_script: "{{sysd_script}}"
      when: use_system_d
